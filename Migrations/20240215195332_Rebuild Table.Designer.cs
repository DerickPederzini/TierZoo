// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TierZooAPI.Data;

#nullable disable

namespace TierZooAPI.Migrations
{
    [DbContext(typeof(TierZooContext))]
    [Migration("20240215195332_Rebuild Table")]
    partial class RebuildTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TierZooAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<double>("camouflage")
                        .HasColumnType("double");

                    b.Property<double>("defense")
                        .HasColumnType("double");

                    b.Property<double>("health")
                        .HasColumnType("double");

                    b.Property<double>("inteligence")
                        .HasColumnType("double");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("power")
                        .HasColumnType("double");

                    b.Property<double>("speed")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("TierZooAPI.Models.Perk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("perkDescription")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)");

                    b.Property<string>("perkName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Perk");
                });

            modelBuilder.Entity("TierZooAPI.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("speciesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("TierZooAPI.Models.Genre", b =>
                {
                    b.HasOne("TierZooAPI.Models.Species", "Species")
                        .WithMany("Genre")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("TierZooAPI.Models.Species", b =>
                {
                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
